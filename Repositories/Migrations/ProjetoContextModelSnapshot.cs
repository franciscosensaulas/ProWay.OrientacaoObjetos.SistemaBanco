// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository.Database;

#nullable disable

namespace Repository.Migrations
{
    [DbContext(typeof(ProjetoContext))]
    partial class ProjetoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Repository.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("categorias", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Ação"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Romance"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Programação"
                        });
                });

            modelBuilder.Entity("Repository.Entities.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INT")
                        .HasColumnName("categoria_id");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("VARCHAR(13)")
                        .HasColumnName("isbn");

                    b.Property<decimal>("Preco")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)")
                        .HasColumnName("preco");

                    b.Property<short>("QuantidadePaginas")
                        .HasColumnType("SMALLINT")
                        .HasColumnName("quantidade_paginas");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR(150)")
                        .HasColumnName("titulo");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("livros", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 1,
                            Isbn = "9781423121701",
                            Preco = 42.60m,
                            QuantidadePaginas = (short)400,
                            Titulo = "Percy Jackson 1"
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = 3,
                            Isbn = "1492680788",
                            Preco = 45.55m,
                            QuantidadePaginas = (short)24,
                            Titulo = "Blockchain for Babies"
                        },
                        new
                        {
                            Id = 3,
                            CategoriaId = 3,
                            Isbn = "9780132350884",
                            Preco = 371.69m,
                            QuantidadePaginas = (short)431,
                            Titulo = "Clean Code"
                        },
                        new
                        {
                            Id = 4,
                            CategoriaId = 2,
                            Isbn = "8580417716",
                            Preco = 20.90m,
                            QuantidadePaginas = (short)256,
                            Titulo = "Querido Johnny"
                        });
                });

            modelBuilder.Entity("Repository.Entities.Livro", b =>
                {
                    b.HasOne("Repository.Entities.Categoria", "Categoria")
                        .WithMany("Livros")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Repository.Entities.Categoria", b =>
                {
                    b.Navigation("Livros");
                });
#pragma warning restore 612, 618
        }
    }
}
